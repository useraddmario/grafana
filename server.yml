Description: >
    Mario Rodriguez - AWS portion of CircleCI and AWS pipeline

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  
  UbuntuImageId:
    Description: Region specific Ubuntu 20 image
    Type: String
    Default: ami-06e54d05255faf8f6

Resources:

  DescribeEC2Role:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
  DescribeEC2RolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "DescribeEC2RolePolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - ec2:Describe*
            Resource: "*"
      Roles:
        -
          Ref: "DescribeEC2Role"
  DescribeEC2Profile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        -
          Ref: "DescribeEC2Role"

  WebSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh/http to webserver
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp 
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp 
        FromPort: 9090
        ToPort: 9090
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp 
        FromPort: 9100
        ToPort: 9100
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp 
        FromPort: 9093
        ToPort: 9093
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp 
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
        ImageId: 
          Ref: UbuntuImageId
        KeyName: that-one
        SubnetId: 
          Fn::ImportValue:
            !Sub "${EnvironmentName}-PUB-SN"
        InstanceType: t2.nano
        IamInstanceProfile: !Ref DescribeEC2Profile
        SecurityGroupIds:
          - !GetAtt WebSecGroup.GroupId
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeType: gp2
              VolumeSize: 10
        Tags:
          - Key: Name
            Value: prometheus-instance
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            
            wget https://github.com/prometheus/prometheus/releases/download/v2.19.0/prometheus-2.19.0.linux-amd64.tar.gz

            tar xvfz prometheus-2.19.0.linux-amd64.tar.gz

            useradd --no-create-home --shell /bin/false prometheus

            mkdir /etc/prometheus
            mkdir /var/lib/prometheus

            chown prometheus:prometheus /etc/prometheus
            chown prometheus:prometheus /var/lib/prometheus

            cp prometheus-2.19.0.linux-amd64/{prometheus,promtool} /usr/local/bin/

            chown prometheus:prometheus /usr/local/bin/{prometheus,promtool}

            cp -r prometheus-2.19.0.linux-amd64/{consoles,console_libraries} /etc/prometheus/

            cp prometheus-2.19.0.linux-amd64/prometheus.yml /etc/prometheus/

            chown -R prometheus:prometheus /etc/prometheus
            chown prometheus:prometheus /var/lib/prometheus

            cat << EOF > /etc/systemd/system/prometheus.service
            [Unit]
            Description=Prometheus Time Series Collection and Processing Server
            Wants=network-online.target
            After=network-online.target
            
            [Service]
            User=prometheus
            Group=prometheus
            Type=simple
            ExecStart=/usr/local/bin/prometheus \
            --config.file /etc/prometheus/prometheus.yml \
            --storage.tsdb.path /var/lib/prometheus/ \
            --web.console.templates=/etc/prometheus/consoles \
            --web.console.libraries=/etc/prometheus/console_libraries
            
            [Install]
            WantedBy=multi-user.target
            
            EOF

            

            cat  << EOF >> /etc/prometheus/prometheus.yml
              - job_name: ec2_exporter
                relabel_configs:
                  - source_labels: [__meta_ec2_tag_Name]
                    target_label: instance
                  - source_labels: [__meta_ec2_private_ip]
                    target_label: ip
                ec2_sd_configs:
                  - region: us-west-2
                    port: 9100

            EOF
            
            sed -i 's/# - alertmanager:9093/ - alertmanager:9093/' /etc/prometheus/prometheus.yml
            sed -i 's/^rule_files:/&\n  - "rules.yml"/' /etc/prometheus/prometheus.yml
            
            cat << EOF >> /etc/prometheus/rules.yml
              groups:
              - name: Down
                rules:
                - alert: InstanceDown
                  expr: up == 0
                  for: 1m
                  labels:
                    severity: 'critical'
                  annotations:
                    summary: "Instance  is down"
                    description: " of job  has been down for more than 3 minutes."

            EOF

            systemctl daemon-reload
            systemctl enable --now prometheus
            
            wget https://github.com/prometheus/alertmanager/releases/download/v0.21.0/alertmanager-0.21.0.linux-amd64.tar.gz
            tar xvfz alertmanager-0.21.0.linux-amd64.tar.gz

            cp alertmanager-0.21.0.linux-amd64/alertmanager /usr/local/bin
            cp alertmanager-0.21.0.linux-amd64/amtool /usr/local/bin/
            mkdir /var/lib/alertmanager

            cat << EOF >> /etc/prometheus/alertmanager.yml
            route:
            group_by: [Alertname]
            receiver: email-me

            receivers:
            - name: email-me
              email_configs:
              - to: useraddmario@gmail.com
                from: marios.subscriptions@gmail.com
                smarthost: smtp.gmail.com:587
                auth_username: marios.subscriptions@gmail.com
                auth_identity: marios.subscriptions@gmail.com
                auth_password: Linux6332!

            EOF

            chown -R prometheus:prometheus /etc/prometheus
            chown prometheus:prometheus /usr/local/bin/{alertmanager,amtool}



            cat << EOF >> /etc/systemd/system/alertmanager.service
            [Unit]
            Description=Alert Manager
            Wants=network-online.target
            After=network-online.target

            [Service]
            Type=simple
            User=prometheus
            Group=prometheus
            ExecStart=/usr/local/bin/alertmanager \
              --config.file=/etc/prometheus/alertmanager.yml \
              --storage.path=/var/lib/alertmanager

            Restart=always

            [Install]       
            WantedBy=multi-user.target

            systemctl daemon-reload
            systemctl enable alertmanager
            systemctl start alertmanager

            EOF

            sudo systemctl daemon-reload
            sudo systemctl enable alertmanager
            sudo systemctl start alertmanager

            systemctl restart prometheus

  EC2Instance2:
    Type: AWS::EC2::Instance
    Properties:
        ImageId: 
          Ref: UbuntuImageId
        KeyName: that-one
        SubnetId: 
          Fn::ImportValue:
            !Sub "${EnvironmentName}-PUB-SN"
        InstanceType: t2.nano
        SecurityGroupIds:
          - !GetAtt WebSecGroup.GroupId
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeType: gp2
              VolumeSize: 10
        Tags:
          - Key: Name
            Value: watched-node
